[
  {"competencyCode":"JS_CORE","level":"A1","text":"What is JavaScript primarily used for in web pages?","options":[{"key":"A","label":"Adding interactivity"},{"key":"B","label":"Designing server racks"},{"key":"C","label":"Configuring routers"},{"key":"D","label":"Installing databases"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_CORE","level":"A2","text":"Which environment natively runs JavaScript?","options":[{"key":"A","label":"Web browser"},{"key":"B","label":"Excel only"},{"key":"C","label":"Photoshop only"},{"key":"D","label":"BIOS"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_CORE","level":"B1","text":"Which statement declares a block-scoped variable?","options":[{"key":"A","label":"let"},{"key":"B","label":"var"},{"key":"C","label":"def"},{"key":"D","label":"const var"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_CORE","level":"B2","text":"Which of these is a primitive type in JavaScript?","options":[{"key":"A","label":"Symbol"},{"key":"B","label":"Array"},{"key":"C","label":"Date"},{"key":"D","label":"RegExp"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_CORE","level":"C1","text":"Which best describes JavaScript's typing discipline?","options":[{"key":"A","label":"Dynamically typed"},{"key":"B","label":"Statically typed"},{"key":"C","label":"Untyped"},{"key":"D","label":"Dependent typed"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_CORE","level":"C2","text":"Which execution model feature explains order of JS operations?","options":[{"key":"A","label":"Single-threaded event loop"},{"key":"B","label":"Multi-threaded preemptive"},{"key":"C","label":"Kernel-level threads"},{"key":"D","label":"Purely synchronous"}],"correctOptionKey":"A"},

  {"competencyCode":"JS_TYPES","level":"A1","text":"Which value is a string in JavaScript?","options":[{"key":"A","label":"'Hello'"},{"key":"B","label":"42"},{"key":"C","label":"true"},{"key":"D","label":"null"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_TYPES","level":"A2","text":"What is the result of typeof 42?","options":[{"key":"A","label":"'number'"},{"key":"B","label":"'string'"},{"key":"C","label":"'object'"},{"key":"D","label":"'boolean'"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_TYPES","level":"B1","text":"Which converts a string '123' to a number?","options":[{"key":"A","label":"Number('123')"},{"key":"B","label":"parseBool('123')"},{"key":"C","label":"String(123)"},{"key":"D","label":"Boolean('123')"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_TYPES","level":"B2","text":"Which is NOT a falsy value?","options":[{"key":"A","label":"'0'"},{"key":"B","label":"0"},{"key":"C","label":"NaN"},{"key":"D","label":"'' (empty string)"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_TYPES","level":"C1","text":"What does Object.is(NaN, NaN) return?","options":[{"key":"A","label":"true"},{"key":"B","label":"false"},{"key":"C","label":"Throws"},{"key":"D","label":"undefined"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_TYPES","level":"C2","text":"Which best explains 'boxed' primitives?","options":[{"key":"A","label":"Primitives temporarily wrapped with object types for method access"},{"key":"B","label":"Objects converted to primitives permanently"},{"key":"C","label":"Memory-mapped arrays"},{"key":"D","label":"Weak references"}],"correctOptionKey":"A"},

  {"competencyCode":"JS_OPERATORS","level":"A1","text":"Which operator concatenates strings?","options":[{"key":"A","label":"+"},{"key":"B","label":"-"},{"key":"C","label":"*"},{"key":"D","label":"/"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_OPERATORS","level":"A2","text":"Which operator checks strict equality?","options":[{"key":"A","label":"==="},{"key":"B","label":"=="},{"key":"C","label":"="},{"key":"D","label":"!==="}],"correctOptionKey":"A"},
  {"competencyCode":"JS_OPERATORS","level":"B1","text":"What does '??' do?","options":[{"key":"A","label":"Nullish coalescing"},{"key":"B","label":"Logical AND"},{"key":"C","label":"Bitwise XOR"},{"key":"D","label":"Exponentiation"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_OPERATORS","level":"B2","text":"What is the result of '5' - 2?","options":[{"key":"A","label":"3"},{"key":"B","label":"'52'"},{"key":"C","label":"'3'"},{"key":"D","label":"NaN"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_OPERATORS","level":"C1","text":"Which operator has higher precedence than '||'?","options":[{"key":"A","label":"&&"},{"key":"B","label":"||"},{"key":"C","label":"? :"},{"key":"D","label":", (comma)"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_OPERATORS","level":"C2","text":"Which statement about '==' vs '===' is correct?","options":[{"key":"A","label":"'===' does no type coercion; '==' may coerce"},{"key":"B","label":"Both always coerce"},{"key":"C","label":"Both never coerce"},{"key":"D","label":"'==' is stricter than '==='"}],"correctOptionKey":"A"},

  {"competencyCode":"JS_CONTROL_FLOW","level":"A1","text":"Which keyword starts a conditional block?","options":[{"key":"A","label":"if"},{"key":"B","label":"when"},{"key":"C","label":"cond"},{"key":"D","label":"case"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_CONTROL_FLOW","level":"A2","text":"Which loop runs a fixed number of times with counter?","options":[{"key":"A","label":"for"},{"key":"B","label":"during"},{"key":"C","label":"repeat"},{"key":"D","label":"loop"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_CONTROL_FLOW","level":"B1","text":"Which breaks out of a loop?","options":[{"key":"A","label":"break"},{"key":"B","label":"stop"},{"key":"C","label":"exit()"},{"key":"D","label":"returnLoop"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_CONTROL_FLOW","level":"B2","text":"Which continues to next iteration?","options":[{"key":"A","label":"continue"},{"key":"B","label":"skip"},{"key":"C","label":"pass"},{"key":"D","label":"next()"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_CONTROL_FLOW","level":"C1","text":"Which statement labels can be used with?","options":[{"key":"A","label":"break/continue"},{"key":"B","label":"try/catch"},{"key":"C","label":"import"},{"key":"D","label":"with"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_CONTROL_FLOW","level":"C2","text":"Which is true about switch statements?","options":[{"key":"A","label":"They compare by strict equality (===) in JS"},{"key":"B","label":"They use assignment"},{"key":"C","label":"They are asynchronous"},{"key":"D","label":"They only support numbers"}],"correctOptionKey":"A"},

  {"competencyCode":"JS_FUNCTIONS_SCOPE","level":"A1","text":"Which defines a function?","options":[{"key":"A","label":"function greet(){}"},{"key":"B","label":"fn greet => {}"},{"key":"C","label":"def greet(){}"},{"key":"D","label":"func greet {}"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_FUNCTIONS_SCOPE","level":"A2","text":"Which arrow function returns 5?","options":[{"key":"A","label":"() => 5"},{"key":"B","label":"=> 5"},{"key":"C","label":"() -> 5"},{"key":"D","label":"() => {5}"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_FUNCTIONS_SCOPE","level":"B1","text":"Where do variables declared with let exist?","options":[{"key":"A","label":"Block scope"},{"key":"B","label":"Function scope only"},{"key":"C","label":"Global only"},{"key":"D","label":"Module only"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_FUNCTIONS_SCOPE","level":"B2","text":"What does closure capture?","options":[{"key":"A","label":"Outer lexical environment"},{"key":"B","label":"Network state"},{"key":"C","label":"GPU buffers"},{"key":"D","label":"Kernel modules"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_FUNCTIONS_SCOPE","level":"C1","text":"'this' in an arrow function is:","options":[{"key":"A","label":"Lexically bound"},{"key":"B","label":"Dynamically bound"},{"key":"C","label":"Global always"},{"key":"D","label":"Undefined always"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_FUNCTIONS_SCOPE","level":"C2","text":"Default parameters are evaluated:","options":[{"key":"A","label":"At call time when parameter is undefined"},{"key":"B","label":"At parse time"},{"key":"C","label":"Only once per program"},{"key":"D","label":"Never"}],"correctOptionKey":"A"},

  {"competencyCode":"JS_ARRAYS","level":"A1","text":"Which adds an item to the end of an array?","options":[{"key":"A","label":"push"},{"key":"B","label":"end"},{"key":"C","label":"appendTo"},{"key":"D","label":"insertLast"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_ARRAYS","level":"A2","text":"Which returns the length of an array arr?","options":[{"key":"A","label":"arr.length"},{"key":"B","label":"len(arr)"},{"key":"C","label":"arr.size()"},{"key":"D","label":"arr.count"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_ARRAYS","level":"B1","text":"Which creates a new array from mapping?","options":[{"key":"A","label":"map"},{"key":"B","label":"forEach"},{"key":"C","label":"pushEach"},{"key":"D","label":"iterate"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_ARRAYS","level":"B2","text":"Which method does NOT mutate the original array?","options":[{"key":"A","label":"slice"},{"key":"B","label":"splice"},{"key":"C","label":"reverse"},{"key":"D","label":"sort"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_ARRAYS","level":"C1","text":"What does Array.from do?","options":[{"key":"A","label":"Creates an array from iterable/array-like"},{"key":"B","label":"Freezes an array"},{"key":"C","label":"Clears an array"},{"key":"D","label":"Creates a Set"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_ARRAYS","level":"C2","text":"Which ensures deep immutability of nested arrays?","options":[{"key":"A","label":"Use structured cloning or libraries; Object.freeze is shallow"},{"key":"B","label":"Object.freeze deeply"},{"key":"C","label":"const prevents changes"},{"key":"D","label":"map makes immutable"}],"correctOptionKey":"A"},

  {"competencyCode":"JS_OBJECTS_PROTOS","level":"A1","text":"Which creates an empty object literal?","options":[{"key":"A","label":"{}"},{"key":"B","label":"[]"},{"key":"C","label":"()"},{"key":"D","label":"<>"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_OBJECTS_PROTOS","level":"A2","text":"How to read property x of object o?","options":[{"key":"A","label":"o.x"},{"key":"B","label":"o->x"},{"key":"C","label":"o:x"},{"key":"D","label":"o(x)"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_OBJECTS_PROTOS","level":"B1","text":"What does Object.assign do?","options":[{"key":"A","label":"Copies properties to target"},{"key":"B","label":"Clones deeply"},{"key":"C","label":"Freezes object"},{"key":"D","label":"Deletes properties"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_OBJECTS_PROTOS","level":"B2","text":"Which links an object's prototype?","options":[{"key":"A","label":"Object.create(proto)"},{"key":"B","label":"new Object(proto)"},{"key":"C","label":"setPrototypeOf(null)"},{"key":"D","label":"proto.link()"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_OBJECTS_PROTOS","level":"C1","text":"Which is true about class in JS?","options":[{"key":"A","label":"Syntactic sugar over prototypes"},{"key":"B","label":"New runtime type"},{"key":"C","label":"Removes prototypes"},{"key":"D","label":"Makes JS static"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_OBJECTS_PROTOS","level":"C2","text":"Which prevents adding new properties?","options":[{"key":"A","label":"Object.seal (prevents config/delete, allows write) / Object.freeze (full immutability)"},{"key":"B","label":"Object.assign"},{"key":"C","label":"Object.map"},{"key":"D","label":"Object.cloneDeep"}],"correctOptionKey":"A"},

  {"competencyCode":"JS_ESNEXT","level":"A1","text":"Which syntax inserts variables into strings?","options":[{"key":"A","label":"Template literals"},{"key":"B","label":"XML literals"},{"key":"C","label":"Heredocs"},{"key":"D","label":"Printf"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_ESNEXT","level":"A2","text":"Which spreads array elements into a call?","options":[{"key":"A","label":"... (spread)"},{"key":"B","label":"** (power)"},{"key":"C","label":":: (bind)"},{"key":"D","label":"@@ (decorator)"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_ESNEXT","level":"B1","text":"Which extracts properties into variables?","options":[{"key":"A","label":"Destructuring"},{"key":"B","label":"Pattern matching (proposed)"},{"key":"C","label":"Ref assignment"},{"key":"D","label":"Hoisting"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_ESNEXT","level":"B2","text":"Which creates an iterator producing values on demand?","options":[{"key":"A","label":"Generator function"},{"key":"B","label":"async function"},{"key":"C","label":"class"},{"key":"D","label":"macro"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_ESNEXT","level":"C1","text":"Which is true about Symbols?","options":[{"key":"A","label":"They create unique property keys"},{"key":"B","label":"They are numbers"},{"key":"C","label":"They are JSON serializable by default"},{"key":"D","label":"They auto-convert to strings"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_ESNEXT","level":"C2","text":"Which is correct about iterables vs iterators?","options":[{"key":"A","label":"Iterables have [Symbol.iterator]; iterators have next()"},{"key":"B","label":"Both are arrays"},{"key":"C","label":"Iterators are DOM only"},{"key":"D","label":"Iterables cannot be spread"}],"correctOptionKey":"A"},

  {"competencyCode":"JS_MODULES","level":"A1","text":"Which imports a default export?","options":[{"key":"A","label":"import x from 'mod'"},{"key":"B","label":"import {x} from 'mod'"},{"key":"C","label":"require(x)"},{"key":"D","label":"load x"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_MODULES","level":"A2","text":"Which exports a named function foo?","options":[{"key":"A","label":"export function foo(){}"},{"key":"B","label":"exports: foo"},{"key":"C","label":"module.export foo"},{"key":"D","label":"export:foo()"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_MODULES","level":"B1","text":"Which statement about ESM is true?","options":[{"key":"A","label":"Static structure known at parse time"},{"key":"B","label":"Dynamic require by default"},{"key":"C","label":"No tree-shaking possible"},{"key":"D","label":"Circular imports forbidden by spec"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_MODULES","level":"B2","text":"Which loads an entire module namespace?","options":[{"key":"A","label":"import * as Utils from 'utils'"},{"key":"B","label":"import ** from 'utils'"},{"key":"C","label":"import all 'utils'"},{"key":"D","label":"module('utils').all"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_MODULES","level":"C1","text":"Which is correct about top-level await?","options":[{"key":"A","label":"Allowed in modules under certain environments"},{"key":"B","label":"Only allowed in scripts"},{"key":"C","label":"Always blocks the event loop forever"},{"key":"D","label":"Not part of JS"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_MODULES","level":"C2","text":"Which resolves bare specifiers in browsers today?","options":[{"key":"A","label":"Import maps / bundlers"},{"key":"B","label":"Native by default everywhere"},{"key":"C","label":"Only Node core"},{"key":"D","label":"AMD loader"}],"correctOptionKey":"A"},

  {"competencyCode":"JS_ERRORS_DEBUG","level":"A1","text":"Which starts a try/catch?","options":[{"key":"A","label":"try { ... } catch(e) { ... }"},{"key":"B","label":"attempt { } rescue(e) { }"},{"key":"C","label":"try:catch"},{"key":"D","label":"guard { }"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_ERRORS_DEBUG","level":"A2","text":"Which logs to console?","options":[{"key":"A","label":"console.log('hi')"},{"key":"B","label":"print('hi')"},{"key":"C","label":"puts 'hi'"},{"key":"D","label":"logger('hi')"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_ERRORS_DEBUG","level":"B1","text":"Which error type indicates a coding mistake at parse time?","options":[{"key":"A","label":"SyntaxError"},{"key":"B","label":"TypeError"},{"key":"C","label":"RangeError"},{"key":"D","label":"ReferenceError"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_ERRORS_DEBUG","level":"B2","text":"Which statement is useful for debugging in devtools?","options":[{"key":"A","label":"debugger;"},{"key":"B","label":"halt;"},{"key":"C","label":"pause();"},{"key":"D","label":"breakpoint();"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_ERRORS_DEBUG","level":"C1","text":"Which is a good practice for error handling in async code?","options")[{"key":"A","label":"Use try/catch around await and handle rejections"},{"key":"B","label":"Ignore rejections"},{"key":"C","label":"Swallow errors silently"},{"key":"D","label":"Always crash"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_ERRORS_DEBUG","level":"C2","text":"Which preserves stack traces across async boundaries best?","options":[{"key":"A","label":"Native async/await with proper error propagation"},{"key":"B","label":"Manual callbacks only"},{"key":"C","label":"console.error everywhere"},{"key":"D","label":"setTimeout wrappers"}],"correctOptionKey":"A"},

  {"competencyCode":"JS_ASYNC","level":"A1","text":"Which schedules a function after delay?","options":[{"key":"A","label":"setTimeout"},{"key":"B","label":"runLater"},{"key":"C","label":"delay()"},{"key":"D","label":"wait()"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_ASYNC","level":"A2","text":"Which represents a future value?","options":[{"key":"A","label":"Promise"},{"key":"B","label":"Tuple"},{"key":"C","label":"Socket"},{"key":"D","label":"Symbol"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_ASYNC","level":"B1","text":"Which converts callback APIs into Promise-based?","options":[{"key":"A","label":"promisify (concept)/wrapping"},{"key":"B","label":"callbackify"},{"key":"C","label":"thennify"},{"key":"D","label":"awaitify"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_ASYNC","level":"B2","text":"Which syntax waits for a Promise?","options":[{"key":"A","label":"await"},{"key":"B","label":"stop"},{"key":"C","label":"pause"},{"key":"D","label":"hold"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_ASYNC","level":"C1","text":"Which handles multiple promises and waits for all?","options":[{"key":"A","label":"Promise.all"},{"key":"B","label":"Promise.one"},{"key":"C","label":"Promise.anyOnly"},{"key":"D","label":"Promise.last"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_ASYNC","level":"C2","text":"Which returns first fulfilled promise, ignoring rejections?","options":[{"key":"A","label":"Promise.any"},{"key":"B","label":"Promise.allSettled"},{"key":"C","label":"Promise.all"},{"key":"D","label":"Promise.race"}],"correctOptionKey":"A"},

  {"competencyCode":"JS_PROMISES_ASYNC","level":"A1","text":"How to create a resolved Promise of 1?","options":[{"key":"A","label":"Promise.resolve(1)"},{"key":"B","label":"new Promise.reject(1)"},{"key":"C","label":"Promise()"},{"key":"D","label":"await 1"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_PROMISES_ASYNC","level":"A2","text":"Which attaches a handler for fulfillment?","options":[{"key":"A","label":"then"},{"key":"B","label":"catch"},{"key":"C","label":"finally"},{"key":"D","label":"done"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_PROMISES_ASYNC","level":"B1","text":"Which ensures cleanup after promise settles?","options":[{"key":"A","label":"finally"},{"key":"B","label":"always"},{"key":"C","label":"defer"},{"key":"D","label":"clear"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_PROMISES_ASYNC","level":"B2","text":"Which turns multiple then chains into sequential async code?","options":[{"key":"A","label":"async/await"},{"key":"B","label":"callbacks"},{"key":"C","label":"promisify"},{"key":"D","label":"defer"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_PROMISES_ASYNC","level":"C1","text":"Which statement is true about unhandled rejections?","options":[{"key":"A","label":"They should be handled to avoid process warnings/crashes"},{"key":"B","label":"They are harmless"},{"key":"C","label":"They auto-retry"},{"key":"D","label":"They convert to success"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_PROMISES_ASYNC","level":"C2","text":"Which API waits for all promises to settle regardless of outcome?","options":[{"key":"A","label":"Promise.allSettled"},{"key":"B","label":"Promise.race"},{"key":"C","label":"Promise.any"},{"key":"D","label":"Promise.all"}],"correctOptionKey":"A"},

  {"competencyCode":"JS_EVENT_LOOP","level":"A1","text":"Which queue runs after call stack is empty?","options":[{"key":"A","label":"Task (macrotask) queue"},{"key":"B","label":"GPU queue"},{"key":"C","label":"IOCTL queue"},{"key":"D","label":"Kernel ring"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_EVENT_LOOP","level":"A2","text":"Which runs before rendering in browsers?","options":[{"key":"A","label":"Microtasks"},{"key":"B","label":"Audio thread"},{"key":"C","label":"Bluetooth"},{"key":"D","label":"DMA"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_EVENT_LOOP","level":"B1","text":"Which schedules a microtask?","options":[{"key":"A","label":"queueMicrotask"},{"key":"B","label":"setInterval"},{"key":"C","label":"requestAnimationFrame"},{"key":"D","label":"postMessage"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_EVENT_LOOP","level":"B2","text":"Which API schedules work for next paint?","options":[{"key":"A","label":"requestAnimationFrame"},{"key":"B","label":"setImmediate"},{"key":"C","label":"setTimeout(0)"},{"key":"D","label":"Promise.resolve().then"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_EVENT_LOOP","level":"C1","text":"Which ordering is typical: microtasks vs timers?","options")[{"key":"A","label":"Microtasks run before timers of the same turn"},{"key":"B","label":"Timers before microtasks"},{"key":"C","label":"Random"},{"key":"D","label":"Undefined"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_EVENT_LOOP","level":"C2","text":"Which is true about starvation with microtasks?","options")[{"key":"A","label":"Unbounded microtasks can starve rendering"},{"key":"B","label":"Microtasks never affect rendering"},{"key":"C","label":"They preempt paints"},{"key":"D","label":"They run in parallel"}],"correctOptionKey":"A"},

  {"competencyCode":"JS_DOM","level":"A1","text":"Which selects an element by id?","options":[{"key":"A","label":"document.getElementById('x')"},{"key":"B","label":"document.pick('x')"},{"key":"C","label":"window.id('x')"},{"key":"D","label":"dom.query('x')"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_DOM","level":"A2","text":"Which creates a new div element?","options":[{"key":"A","label":"document.createElement('div')"},{"key":"B","label":"new DOM('div')"},{"key":"C","label":"DOM.create('div')"},{"key":"D","label":"document.make('div')"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_DOM","level":"B1","text":"Which inserts as last child of node?","options":[{"key":"A","label":"appendChild"},{"key":"B","label":"attach"},{"key":"C","label":"insertLast"},{"key":"D","label":"addChild"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_DOM","level":"B2","text":"Which reads or sets HTML content of an element?","options":[{"key":"A","label":"innerHTML"},{"key":"B","label":"outerCSS"},{"key":"C","label":"innerTextOnly"},{"key":"D","label":"textOnly"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_DOM","level":"C1","text":"Which API improves performance by batching DOM updates?","options")[{"key":"A","label":"DocumentFragment"},{"key":"B","label":"DOMParser"},{"key":"C","label":"HTMLRewriter"},{"key":"D","label":"DOMBatcher"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_DOM","level":"C2","text":"Which technique reduces reflows when adding many nodes?","options")[{"key":"A","label":"Use fragments/virtual DOM and minimize layout thrashing"},{"key":"B","label":"Set innerHTML per node in a loop of 10k"},{"key":"C","label":"Force sync layout reads each time"},{"key":"D","label":"Use alert loops"}],"correctOptionKey":"A"},

  {"competencyCode":"JS_EVENTS","level":"A1","text":"Which adds a click listener?","options":[{"key":"A","label":"element.addEventListener('click', fn)"},{"key":"B","label":"element.on('click', fn)"},{"key":"C","label":"listen('click')"},{"key":"D","label":"onClick=fn()"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_EVENTS","level":"A2","text":"Which stops default action?","options":[{"key":"A","label":"event.preventDefault()"},{"key":"B","label":"event.stopAll()"},{"key":"C","label":"event.cancel()"},{"key":"D","label":"event.off()"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_EVENTS","level":"B1","text":"What is event delegation?","options":[{"key":"A","label":"Attaching one handler high in DOM to handle child events"},{"key":"B","label":"Handling only capture"},{"key":"C","label":"Blocking all events"},{"key":"D","label":"Using timers"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_EVENTS","level":"B2","text":"Which phases do DOM events have?","options":[{"key":"A","label":"Capture, target, bubble"},{"key":"B","label":"Begin, middle, end"},{"key":"C","label":"Up, down"},{"key":"D","label":"Request, response"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_EVENTS","level":"C1","text":"Which is true about passive listeners?","options")[{"key":"A","label":"They signal that listener won't call preventDefault on touch/scroll"},{"key":"B","label":"They capture by default"},{"key":"C","label":"They stop bubbling"},{"key":"D","label":"They are async"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_EVENTS","level":"C2","text":"Which improves performance of frequent events?","options")[{"key":"A","label":"Throttling/debouncing"},{"key":"B","label":"Busy loops"},{"key":"C","label":"Alert debugging"},{"key":"D","label":"Synchronous XHR"}],"correctOptionKey":"A"},

  {"competencyCode":"JS_WEB_APIS","level":"A1","text":"Which API fetches resources over HTTP?","options":[{"key":"A","label":"fetch"},{"key":"B","label":"openFile"},{"key":"C","label":"socket()"},{"key":"D","label":"db.query"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_WEB_APIS","level":"A2","text":"Which returns a Response object's status code?","options":[{"key":"A","label":"response.status"},{"key":"B","label":"response.code"},{"key":"C","label":"response.state"},{"key":"D","label":"response.okCode"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_WEB_APIS","level":"B1","text":"How to parse JSON from fetch response?","options":[{"key":"A","label":"await res.json()"},{"key":"B","label":"await res.textJSON()"},{"key":"C","label":"JSON.parse(res)"},{"key":"D","label":"res.toJSON()"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_WEB_APIS","level":"B2","text":"Which header allows CORS for all origins?","options":[{"key":"A","label":"Access-Control-Allow-Origin: *"},{"key":"B","label":"Allow-All: true"},{"key":"C","label":"CORS: yes"},{"key":"D","label":"Origin: *"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_WEB_APIS","level":"C1","text":"Which API aborts a fetch?","options":[{"key":"A","label":"AbortController"},{"key":"B","label":"CancelToken"},{"key":"C","label":"Stopper"},{"key":"D","label":"fetch.stop()"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_WEB_APIS","level":"C2","text":"Which option sends credentials with fetch?","options")[{"key":"A","label":"credentials: 'include'"},{"key":"B","label":"withCredentials: true"},{"key":"C","label":"auth: true"},{"key":"D","label":"cookies: true"}],"correctOptionKey":"A"},

  {"competencyCode":"JS_STORAGE","level":"A1","text":"Which stores a simple key/value in browser?","options":[{"key":"A","label":"localStorage.setItem"},{"key":"B","label":"fs.writeFile"},{"key":"C","label":"db.save"},{"key":"D","label":"cookie.save"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_STORAGE","level":"A2","text":"Which persists only until browser tab closes?","options":[{"key":"A","label":"sessionStorage"},{"key":"B","label":"localStorage"},{"key":"C","label":"fileStorage"},{"key":"D","label":"diskStorage"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_STORAGE","level":"B1","text":"Which is a secure cookie attribute to mitigate CSRF?","options":[{"key":"A","label":"SameSite"},{"key":"B","label":"ReadOnly"},{"key":"C","label":"SecureOnly"},{"key":"D","label":"NoSave"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_STORAGE","level":"B2","text":"Which storage size is typically larger?","options")[{"key":"A","label":"IndexedDB"},{"key":"B","label":"sessionStorage"},{"key":"C","label":"localStorage"},{"key":"D","label":"cookie"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_STORAGE","level":"C1","text":"Which API provides transactional key-value storage?","options":[{"key":"A","label":"IndexedDB"},{"key":"B","label":"localStorage"},{"key":"C","label":"FileSystemAPI"},{"key":"D","label":"CacheOnly"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_STORAGE","level":"C2","text":"Which statement about localStorage is correct?","options")[{"key":"A","label":"Synchronous API; large writes can block the main thread"},{"key":"B","label":"Asynchronous by spec"},{"key":"C","label":"Encrypted by default"},{"key":"D","label":"Unlimited size"}],"correctOptionKey":"A"},

  {"competencyCode":"JS_PERFORMANCE","level":"A1","text":"Which reduces script size for faster loads?","options":[{"key":"A","label":"Minification"},{"key":"B","label":"Duplication"},{"key":"C","label":"Obfuscation only"},{"key":"D","label":"Whitespace padding"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_PERFORMANCE","level":"A2","text":"Which metric measures time to first render?","options")[{"key":"A","label":"First Contentful Paint (FCP)"},{"key":"B","label":"Frames Per Second"},{"key":"C","label":"Heap Size"},{"key":"D","label":"CPU Temp"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_PERFORMANCE","level":"B1","text":"Which technique splits code by route?","options")[{"key":"A","label":"Code-splitting"},{"key":"B","label":"Code-doubling"},{"key":"C","label":"Code-joining"},{"key":"D","label":"Code-freezing"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_PERFORMANCE","level":"B2","text":"Which API profiles JS performance in browsers?","options")[{"key":"A","label":"Performance API"},{"key":"B","label":"CPU API"},{"key":"C","label":"Thread API"},{"key":"D","label":"RenderTimer"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_PERFORMANCE","level":"C1","text":"Which reduces layout thrashing?","options")[{"key":"A","label":"Batch reads then writes, avoid sync style reads after writes"},{"key":"B","label":"Force sync getBoundingClientRect each loop"},{"key":"C","label":"Full reflow per node"},{"key":"D","label":"Randomize order"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_PERFORMANCE","level":"C2","text":"Which improves long-task responsiveness?","options")[{"key":"A","label":"Yield with requestIdleCallback / async chunking"},{"key":"B","label":"While(true) computations"},{"key":"C","label":"setTimeout(0) only"},{"key":"D","label":"alert during loop"}],"correctOptionKey":"A"},

  {"competencyCode":"JS_TESTING","level":"A1","text":"Which assertion passes if value is true?","options":[{"key":"A","label":"expect(value).toBe(true)"},{"key":"B","label":"assertTrue(value) (JS default)"},{"key":"C","label":"value == 1 only"},{"key":"D","label":"console.ok(value)"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_TESTING","level":"A2","text":"Which runs a test in Jest?","options")[{"key":"A","label":"test('name', fn) or it('name', fn)"},{"key":"B","label":"runTest()"},{"key":"C","label":"describeOnly()"},{"key":"D","label":"suite()"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_TESTING","level":"B1","text":"Which isolates units by replacing dependencies?","options")[{"key":"A","label":"Mocking"},{"key":"B","label":"Mining"},{"key":"C","label":"Merging"},{"key":"D","label":"Monolithing"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_TESTING","level":"B2","text":"Which matches partial objects in Jest?","options")[{"key":"A","label":"expect.objectContaining"},{"key":"B","label":"expect.partialMatch"},{"key":"C","label":"expect.containsObject"},{"key":"D","label":"expect.someOf"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_TESTING","level":"C1","text":"Which improves test reliability?","options")[{"key":"A","label":"Avoid test interdependence and shared global state"},{"key":"B","label":"Rely on timeouts"},{"key":"C","label":"Use real network always"},{"key":"D","label":"Skip teardown"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_TESTING","level":"C2","text":"Which is best for end-to-end browser testing?","options")[{"key":"A","label":"Playwright/Cypress/Puppeteer"},{"key":"B","label":"Mocha only"},{"key":"C","label":"Node REPL"},{"key":"D","label":"curl"}],"correctOptionKey":"A"},

  {"competencyCode":"JS_TOOLING","level":"A1","text":"Which installs a package locally?","options":[{"key":"A","label":"npm install package"},{"key":"B","label":"apt-get package"},{"key":"C","label":"pip package"},{"key":"D","label":"composer require"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_TOOLING","level":"A2","text":"Which linter is common in JS projects?","options")[{"key":"A","label":"ESLint"},{"key":"B","label":"Clippy"},{"key":"C","label":"Bandit"},{"key":"D","label":"Pylint"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_TOOLING","level":"B1","text":"Which tool bundles modules for the browser?","options")[{"key":"A","label":"Webpack/Vite/Rollup"},{"key":"B","label":"Make only"},{"key":"C","label":"Maven"},{"key":"D","label":"Ant"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_TOOLING","level":"B2","text":"Which formats code automatically?","options")[{"key":"A","label":"Prettier"},{"key":"B","label":"Beautify by hand"},{"key":"C","label":"Gofmt"},{"key":"D","label":"Autopep8"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_TOOLING","level":"C1","text":"Which improves dev builds speed via HMR?","options")[{"key":"A","label":"Vite / Webpack HMR"},{"key":"B","label":"Rebuild everything each save"},{"key":"C","label":"FTP upload"},{"key":"D","label":"No cache"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_TOOLING","level":"C2","text":"Which ensures reproducible installs?","options")[{"key":"A","label":"Lockfiles (package-lock.json/pnpm-lock.yaml)"},{"key":"B","label":"Random versions"},{"key":"C","label":"Global installs only"},{"key":"D","label":"No versioning"}],"correctOptionKey":"A"},

  {"competencyCode":"TS_BASICS","level":"A1","text":"TypeScript adds what to JavaScript?","options":[{"key":"A","label":"Static typing"},{"key":"B","label":"Kernel drivers"},{"key":"C","label":"SQL engine"},{"key":"D","label":"Image editor"}],"correctOptionKey":"A"},
  {"competencyCode":"TS_BASICS","level":"A2","text":"Which file extension is TypeScript source?","options")[{"key":"A","label":".ts"},{"key":"B","label":".java"},{"key":"C","label":".jsx"},{"key":"D","label":".py"}],"correctOptionKey":"A"},
  {"competencyCode":"TS_BASICS","level":"B1","text":"Which defines a shape of an object?","options")[{"key":"A","label":"interface"},{"key":"B","label":"typedef"},{"key":"C","label":"schema"},{"key":"D","label":"form"}],"correctOptionKey":"A"},
  {"competencyCode":"TS_BASICS","level":"B2","text":"Which narrows union types at runtime?","options")[{"key":"A","label":"Type guards"},{"key":"B","label":"Typecasting"},{"key":"C","label":"Coercion"},{"key":"D","label":"Duck typing only"}],"correctOptionKey":"A"},
  {"competencyCode":"TS_BASICS","level":"C1","text":"Which enables generic functions?","options")[{"key":"A","label":"Type parameters <T>"},{"key":"B","label":"new generic()"},{"key":"C","label":"macro<T>"},{"key":"D","label":"auto type"}],"correctOptionKey":"A"},
  {"competencyCode":"TS_BASICS","level":"C2","text":"Which config controls TS compiler options?","options")[{"key":"A","label":"tsconfig.json"},{"key":"B","label":"package.ts"},{"key":"C","label":"ts-opts.json"},{"key":"D","label":"config.ts"}],"correctOptionKey":"A"},

  {"competencyCode":"JS_SECURITY","level":"A1","text":"Which is a common web security issue mitigated by escaping output?","options")[{"key":"A","label":"XSS"},{"key":"B","label":"NTP drift"},{"key":"C","label":"GPU overheating"},{"key":"D","label":"Battery drain"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_SECURITY","level":"A2","text":"Which header helps defend against clickjacking?","options")[{"key":"A","label":"X-Frame-Options / CSP frame-ancestors"},{"key":"B","label":"X-Click-Stop"},{"key":"C","label":"No-Frame"},{"key":"D","label":"Frame-Block"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_SECURITY","level":"B1","text":"Which prevents sending cookies with cross-site requests?","options")[{"key":"A","label":"SameSite=Strict/Lax"},{"key":"B","label":"HttpOnly=Off"},{"key":"C","label":"Proxy-Only"},{"key":"D","label":"No-CORS"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_SECURITY","level":"B2","text":"Which is safer for secrets in browser apps?","options")[{"key":"A","label":"Store minimally, avoid localStorage; prefer HttpOnly cookies server-side"},{"key":"B","label":"localStorage tokens always"},{"key":"C","label":"Embed in JS code"},{"key":"D","label":"URL query always"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_SECURITY","level":"C1","text":"Which CSP directive controls allowed script sources?","options")[{"key":"A","label":"script-src"},{"key":"B","label":"img-src"},{"key":"C","label":"style-src"},{"key":"D","label":"font-src"}],"correctOptionKey":"A"},
  {"competencyCode":"JS_SECURITY","level":"C2","text":"Which best practice reduces supply-chain risk?","options")[{"key":"A","label":"Pin versions and use integrity checks (SRI)"},{"key":"B","label":"Use random GitHub repos"},{"key":"C","label":"Disable audits"},{"key":"D","label":"Globally trust all"}],"correctOptionKey":"A"}
]


